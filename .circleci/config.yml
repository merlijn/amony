# Scala CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/sample-config/
version: 2.1
jobs:
  build_server:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/repo
      
      - run: pwd; ls -la

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sbt test:test

      - save_cache:
          paths:
            - ~/.m2
            - ~/.ivy2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      - run: 
          name: Build server
          command: sbt assembly    

  build_web_client:

    working_directory: ~/repo/web-client

    docker:
      # specify the version you desire here
      - image: cimg/node:16.13.0  

    steps:
      - checkout:
          path: ~/repo

      - run: pwd; ls -la

      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-
      - run: 
          name: Node install
          command: npm install --save

      - save_cache:
          paths:
            - ~/.m2
            - ~/.ivy2
          key: v1-dependencies--{{ checksum "package-lock.json" }}
      - run: 
          name: Node build
          command: npm run build

workflows:
  build_and_test: # name of your workflow
    jobs:
      - build_server
      - build_web_client
